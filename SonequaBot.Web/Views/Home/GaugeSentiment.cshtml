<canvas id="gaugeSentiment"></canvas>

@section scripts {
    <script src="https://bernii.github.io/gauge.js/dist/gauge.min.js"></script>

    <script>

        //var connection = new signalR.HubConnectionBuilder().withUrl("/sonequaBotHub").build();

        var opts = {
            angle: -0.2, // The span of the gauge arc
            lineWidth: 0.2, // The line thickness
            radiusScale: 1, // Relative radius
            pointer: {
                length: 0.6, // // Relative to gauge radius
                strokeWidth: 0.035, // The thickness
                color: "#000000" // Fill color
            },
            limitMax: false, // If false, max value increases automatically if value > maxValue
            limitMin: false, // If true, the min value of the gauge will be fixed
            colorStart: "#6F6EA0", // Colors
            colorStop: "#C0C0DB", // just experiment with them
            strokeColor: "#EEEEEE", // to see which ones work best for you
            generateGradient: true,
            highDpiSupport: true,
            percentColors: [
                [0.0, "#a9d70b"],
                [0.5, "#f9c802"],
                [1.0, "#ff0000"]
            ],
            staticZones: [
                { strokeStyle: "#F03E3E", min: -1, max: -0.4 }, // Red
                { strokeStyle: "#FFDD00", min: -0.4, max: 0.4 }, // Yellow
                { strokeStyle: "#30B32D", min: 0.4, max: 1 } // Green
            ]
        };
        var target = document.getElementById("gaugeSentiment"); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 1; // set max gauge value
        gauge.setMinValue(-1); // Prefer setter over gauge.minValue = 0
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        gauge.set(0); // set actual value

        //connection.start().then(function () {

        //}).catch(function (err) {
        //    return console.error(err.toString());
        //});

        connection.on("ReceiveGaugeSentiment", function (sentiment) {
            gauge.set(sentiment);
        });
    </script>
}